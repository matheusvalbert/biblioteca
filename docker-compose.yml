version: "3.8"

services:
  app:
    build:
      args:
        user: laravel
        uid: 1000
      context: ./
      dockerfile: .docker/Dockerfile
    image: laravel
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks:
      - mynetwork

  # nginx
  nginx:
    container_name: laravel-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d
      - ./docker/nginx/log:/var/log/nginx
    networks:
      - mynetwork

  # mysql
  mysql:
    container_name: laravel-mysql
    image: mysql:5.7.38
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql:/var/lib/mysql
      - ./docker/mysql/log:/var/log/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - mynetwork

  # redis
  redis:
    container_name: laravel-redis
    image: redis:latest
    volumes:
      - ./.docker/redis/redis.conf:/etc/redis/redis.conf
      - ./docker/redis/log:/var/log/redis/
    networks:
      - mynetwork

  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    ports:
      - 8081:80
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    links:
      - mysql
    networks:
      - mynetwork

  elasticsearch:
    container_name: es-laravel
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - mynetwork
    ports:
      - 9200:9200
  
  kibana:
    container_name: kb-laravel
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - mynetwork
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  logstash:
    image: docker.elastic.co/logstash/logstash:7.11.0
    volumes:
      - ./.docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5000:5000
    depends_on:
      - elasticsearch
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
